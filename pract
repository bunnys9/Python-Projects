import sqlite3

# Connect to SQLite database (or create it if it doesn't exist)
conn = sqlite3.connect("example.db")
cursor = conn.cursor()

# Enable foreign key support
cursor.execute("PRAGMA foreign_keys = ON;")

# Create users table
cursor.execute("""
CREATE TABLE IF NOT EXISTS users (
    id INTEGER PRIMARY KEY,
    name TEXT NOT NULL
);
""")

# Create orders table with foreign key
cursor.execute("""
CREATE TABLE IF NOT EXISTS orders (
    id INTEGER PRIMARY KEY,
    user_id INTEGER,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);
""")

# Insert a user
cursor.execute("INSERT INTO users (name) VALUES (?);", ("Alice",))
user_id = cursor.lastrowid  # Get the last inserted user ID

# Insert an order for the user
cursor.execute("INSERT INTO orders (user_id) VALUES (?);", (user_id,))

# Commit changes and display inserted data
conn.commit()

print("Users:")
for row in cursor.execute("SELECT * FROM users;"):
    print(row)

print("\nOrders:")
for row in cursor.execute("SELECT * FROM orders;"):
    print(row)

# Delete the user (should cascade and delete orders)
cursor.execute("DELETE FROM users WHERE id = ?;", (user_id,))
conn.commit()

print("\nAfter deleting user:")
print("Users:", list(cursor.execute("SELECT * FROM users;")))
print("Orders:", list(cursor.execute("SELECT * FROM orders;")))  # Should be empty if CASCADE works

# Close the connection
conn.close()
